@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using AstirOdysseusKos.Web.Models
@using AstirOdysseusKos.Web.Services
@inject IBlogService _blog;
@{
  var blogPosts = await _blog.GetAllBlogPostsAsync(6);

}
@if (blogPosts.Count > 0)
{
  <div class="blog-section pt-offset">
    <h2 class="">
      @Html.Raw(@Umbraco.GetDictionaryValue("header-blog"))
    </h2>
    <div class="swiper blogCarousel">
      <div class="swiper-wrapper">
        @foreach (var item in blogPosts)
        {
          string postUrl = $"https://blog.astirodysseuskos.com/{item.Slug}";
          <div class="swiper-slide blog-slide">
            <div class="blog-slide-content">
              @{
                string imageSrc = string.Empty;
                if (item.FeaturedImage != null)
                {
                  if (blogPosts.IndexOf(item) == 0 && item.FeaturedImage.MediaSizes != null && item.FeaturedImage.MediaSizes.TryGetValue("large", out var large) && !string.IsNullOrEmpty(large))
                  {
                    imageSrc = !string.IsNullOrEmpty(large) 
                    ? large 
                    : item.FeaturedImage.SourceUrl is string url
                    ? $"{url}?width=800&format=webp"
                    : $"{item.FeaturedImage}?width=800&format=webp";
                  }

                  if (blogPosts.IndexOf(item) > 0 && item.FeaturedImage.MediaSizes != null && item.FeaturedImage.MediaSizes.TryGetValue("medium_large", out var medium) && !string.IsNullOrEmpty(medium))
                  {
                    imageSrc = !string.IsNullOrEmpty(medium)
                    ? medium
                    : item.FeaturedImage.SourceUrl is string url
                    ? $"{url}?width=800&format=webp"
                    : $"{item.FeaturedImage}?width=800&format=webp";
                  }                  
                }
              }
              <img loading="lazy" src="@imageSrc" class="img-fluid fit-img" alt="@item.Title" />
              <div class="overlayText">
                <h3>
                  <a href="@postUrl" target="_blank">
                    @Html.Raw(item.Title)
                    <span class="date">
                      @item.PublishedDate.ToString("dd MMM yyyy")
                    </span>
                  </a>
                </h3>
              </div>
            </div>
          </div>
        }
      </div>
    </div>
  </div>
}